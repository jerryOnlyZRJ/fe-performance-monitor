/**
 * fe-performance-monitor v1.0.0
 * Copyright 2018-2019 Ranjay
 * Released under the MIT License
 * https://github.com/jerryOnlyZRJ/fe-performance-monitor#readme
 */
!function(t,n){"undefined"==typeof module?t.mtEvents=n():module.exports=n()}(this,function(){"use strict";ttiPolyfill=ttiPolyfill&&ttiPolyfill.hasOwnProperty("default")?ttiPolyfill.default:ttiPolyfill;var i=new Map;i.set("resource",function(t){return{rtt:t.responseStart-t.startTime,name:t.name,duration:t.duration}}),i.set("paint",function(t){return{name:t.name,startTime:t.startTime}}),i.set("mark",function(t){return{name:t.name,startTime:t.startTime,duration:t.duration}}),i.set("navigation",function(t){return{name:t.name,rtt:t.responseStart,domContentLoaded:t.domContentLoadedEventEnd,domComplete:t.domComplete}}),i.set("longtask",function(t){return t});var t=function(t){this.options=t,this.monitorResult={}};return t.prototype.uploadMonitorLogs=function(){if(navigator.sendBeacon&&"function"==typeof navigator.sendBeacon){var t=new window.Blob([JSON.stringify(this.monitorResult)],{type:"application/json"});navigator.sendBeacon(this.options.url,t)}else fetch in window?window.fetch(this.options.url,{method:"POST",body:JSON.stringify(this.monitorResult)}):console.log(this.monitorResult)},t.prototype.init=function(){var n=this,o=new window.PerformanceObserver(function(t){t.getEntries().map(function(t){n.monitorResult[t.entryType]?n.monitorResult[t.entryType].push(i.get(t.entryType)(t)):n.monitorResult[t.entryType]=[i.get(t.entryType)(t)]}),n.monitorResult.resource&&n.monitorResult.resource.sort(function(t,n){return n.duration-t.duration}),o.disconnect()});o.observe({entryTypes:["resource","mark","paint","navigation","longtask"]}),ttiPolyfill.getFirstConsistentlyInteractive({}).then(function(t){n.monitorResult.navigation&&n.monitorResult.navigation.push({name:"time-to-interactive",startTime:t})});var e=window.onload;window.onload=function(t){e&&"function"==typeof e&&e(t),window.requestIdleCallback?window.requestIdleCallback(n.uploadMonitorLogs.bind(n)):setTimeout(n.uploadMonitorLogs.bind(n))}},t});